AudioWorkletProcessor.prototype._r1=function(){this._s1=true;this.port.onmessage=(_t1)=>{if(_t1.data==="kill")this._s1=false;};};class _u1 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._r1();}process(_v1,_w1,parameters){const _x1=_v1[0];for(let c=0;c<_x1.length;++c){const _y1=_x1[c];for(let _z1=0;_z1<_y1.length;++_z1)_w1[parameters.bypass[_z1]??parameters.bypass[0]][c][_z1]=_y1[_z1];
}return this._s1;}}class _A1 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._r1();}process(_v1,_w1,parameters){const _B1=_v1[0];const _C1=_v1[1];const _D1=_w1[0];const gain=parameters.gain;for(let c=0;c<_C1.length;++c){const _y1=_C1[c];const _E1=_D1[c];for(let _z1=0;_z1<_y1.length;++_z1)_E1[_z1]=_y1[_z1];}for(let c=0;c<_B1.length;++c){const _y1=_B1[c];const _E1=_D1[c];for(let _z1=0;_z1<_y1.length;++_z1)_E1[_z1]+=_y1[_z1]*(gain[_z1]??gain[0]);
}return this._s1;}}registerProcessor("audio-bus-input",_u1);registerProcessor("audio-bus-output",_A1);class _F1 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",
defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _G1=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_H1){super();this._r1();const _I1=_H1.outputChannelCount[0];this._J1=new Float32Array(_I1);this._K1=new Uint32Array(_I1);}process(_v1,_w1,parameters){const _x1=_v1[0];const _D1=_w1[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;const resolution=parameters.resolution;const mix=parameters.mix;for(let c=0;c<_x1.length;
++c){const _y1=_x1[c];const _E1=_D1[c];for(let _z1=0;_z1<_y1.length;++_z1){_E1[_z1]=_y1[_z1];if(this._K1[c]===0)this._J1[c]=_y1[_z1];++this._K1[c];this._K1[c]%=(factor[_z1]??factor[0]);if(bypass[_z1]??bypass[0])continue;let _L1=this._J1[c];const _M1=(gain[_z1]??gain[0]);_L1*=_M1;_L1=Math.max(Math.min(_L1,1.0),-1.0);const _N1=resolution[_z1]??resolution[0];const max=(_L1>0.0)?_F1._G1[_N1]-1:_F1._G1[_N1];_L1=Math.round(_L1*max)/max;const _O1=(mix[_z1]??mix[0]);_E1[_z1]*=(1.0-_O1);_E1[_z1]+=(_L1*_O1);}}return this._s1;
}}registerProcessor("bitcrusher-processor",_F1);class _P1 extends AudioWorkletProcessor{static _Q1=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_P1._Q1},{name:"feedback",automationRate:"a-rate",defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_H1){super();this._r1();
const _I1=_H1.outputChannelCount[0];const _R1=(_P1._Q1*sampleRate)+1;this.buffer=new Array(_I1);this._S1=new Uint32Array(_I1);for(let c=0;c<_I1;++c)this.buffer[c]=new Float32Array(_R1);}process(_v1,_w1,parameters){const _x1=_v1[0];const _D1=_w1[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;const mix=parameters.mix;for(let c=0;c<_x1.length;++c){const _y1=_x1[c];const _E1=_D1[c];for(let _z1=0;_z1<_y1.length;++_z1){_E1[_z1]=_y1[_z1];const _T1=this._U1(c,(time[_z1]??time[0]));
const _V1=_y1[_z1]+(_T1*(feedback[_z1]??feedback[0]));this.write(c,_V1);if((bypass[_z1]??bypass[0]))continue;const _O1=(mix[_z1]??mix[0]);_E1[_z1]*=(1-_O1);_E1[_z1]+=(_T1*_O1);}}return this._s1;}_U1(_W1,_X1){const _Y1=_X1*sampleRate;let _Z1=(this._S1[_W1]-~~_Y1);let __1=(_Z1-1);while(_Z1<0)_Z1+=this.buffer[_W1].length;while(__1<0)__1+=this.buffer[_W1].length;const frac=_Y1-~~_Y1;const _02=this.buffer[_W1][_Z1];const _12=this.buffer[_W1][__1];return _02+(_12-_02)*frac;}write(_W1,_22){++this._S1[_W1];this._S1[_W1]%=this.buffer[_W1].length;
this.buffer[_W1][this._S1[_W1]]=_22;}}registerProcessor("delay-processor",_P1);class _32 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,minValue:0.0}];}constructor(){super();this._r1();}process(_v1,_w1,parameters){const _x1=_v1[0];const _D1=_w1[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let c=0;c<_x1.length;++c){const _y1=_x1[c];const _E1=_D1[c];
for(let _z1=0;_z1<_y1.length;++_z1){_E1[_z1]=_y1[_z1];if(bypass[_z1]??bypass[0])continue;_E1[_z1]*=(gain[_z1]??gain[0]);}}return this._s1;}}registerProcessor("gain-processor",_32);class _42 extends AudioWorkletProcessor{static get parameterDescriptors(){const _52=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_52),minValue:10.0,maxValue:_52},{name:"q",automationRate:"a-rate",
defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_H1){super();this._r1();const _I1=_H1.outputChannelCount[0];this._62=0;this._72=0;this._82=0;this._92=0;this._a2=0;this._b2=new Float32Array(_I1);this._c2=new Float32Array(_I1);this._d2=new Float32Array(_I1);this._e2=new Float32Array(_I1);this._f2=-1;this._g2=-1;}process(_v1,_w1,parameters){const _x1=_v1[0];const _D1=_w1[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _h2=(cutoff.length===1&&q.length===1);
if(_h2)this._i2(cutoff[0],q[0]);for(let c=0;c<_x1.length;++c){const _y1=_x1[c];const _E1=_D1[c];for(let _z1=0;_z1<_y1.length;++_z1){if(!_h2)this._i2(cutoff[_z1]??cutoff[0],q[_z1]??q[0]);const _j2=this._82*_y1[_z1]+this._92*this._b2[c]+this._a2*this._c2[c]-this._62*this._d2[c]-this._72*this._e2[c];this._c2[c]=this._b2[c];this._b2[c]=_y1[_z1];this._e2[c]=this._d2[c];this._d2[c]=_j2;_E1[_z1]=(bypass[_z1]??bypass[0])?_y1[_z1]:_j2;}}return this._s1;}_i2(_k2,_l2){if(_k2===this._f2&&_l2===this._g2)return;const _m2=2*Math.PI*_k2/sampleRate;
const alpha=Math.sin(_m2)/(2*_l2);const _n2=Math.cos(_m2);const _o2=1+alpha;const _62=-2*_n2;const _72=1-alpha;const _82=(1+_n2)/2;const _92=-1-_n2;const _a2=(1+_n2)/2;this._62=_62/_o2;this._72=_72/_o2;this._82=_82/_o2;this._92=_92/_o2;this._a2=_a2/_o2;this._f2=_k2;this._g2=_l2;}}registerProcessor("hpf2-processor",_42);class _p2 extends AudioWorkletProcessor{static get parameterDescriptors(){const _52=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}
,{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_52),minValue:10.0,maxValue:_52},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_H1){super();this._r1();const _I1=_H1.outputChannelCount[0];this._62=0;this._72=0;this._82=0;this._92=0;this._a2=0;this._b2=new Float32Array(_I1);this._c2=new Float32Array(_I1);this._d2=new Float32Array(_I1);this._e2=new Float32Array(_I1);this._f2=-1;this._g2=-1;}process(_v1,_w1,parameters){const _x1=_v1[0];const _D1=_w1[0];
const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _h2=(cutoff.length===1&&q.length===1);if(_h2)this._i2(cutoff[0],q[0]);for(let c=0;c<_x1.length;++c){const _y1=_x1[c];const _E1=_D1[c];for(let _z1=0;_z1<_y1.length;++_z1){if(!_h2)this._i2(cutoff[_z1]??cutoff[0],q[_z1]??q[0]);const _j2=this._82*_y1[_z1]+this._92*this._b2[c]+this._a2*this._c2[c]-this._62*this._d2[c]-this._72*this._e2[c];this._c2[c]=this._b2[c];this._b2[c]=_y1[_z1];this._e2[c]=this._d2[c];this._d2[c]=_j2;
_E1[_z1]=(bypass[_z1]??bypass[0])?_y1[_z1]:_j2;}}return this._s1;}_i2(_k2,_l2){if(_k2===this._f2&&_l2===this._g2)return;const _m2=2*Math.PI*_k2/sampleRate;const alpha=Math.sin(_m2)/(2*_l2);const _n2=Math.cos(_m2);const _o2=1+alpha;const _62=-2*_n2;const _72=1-alpha;const _82=(1-_n2)/2;const _92=1-_n2;const _a2=(1-_n2)/2;this._62=_62/_o2;this._72=_72/_o2;this._82=_82/_o2;this._92=_92/_o2;this._a2=_a2/_o2;this._f2=_k2;this._g2=_l2;}}registerProcessor("lpf2-processor",_p2);class _q2{constructor(_r2){this._s2=0;
this._t2=0;this.feedback=0;this._u2=0;this.buffer=new Float32Array(_r2);this._v2=0;}process(_22){const out=this.buffer[this._v2];this._u2=(this._u2*this._s2)+(out*this._t2);this.buffer[this._v2]=_22+(this._u2*this.feedback);++this._v2;this._v2%=this.buffer.length;return out;}_w2(_x2){this.feedback=Math.min(Math.max(0,_x2),1);}_y2(_z2){this._s2=Math.min(Math.max(0,_z2),1);this._t2=1-this._s2;}}class _A2{constructor(_r2){this.feedback=0;this.buffer=new Float32Array(_r2);this._v2=0;}process(_22){const out=this.buffer[this._v2];
this.buffer[this._v2]=_22+(out*this.feedback);++this._v2;this._v2%=this.buffer.length;return(out-_22);}_w2(_x2){this.feedback=Math.min(Math.max(0,_x2),1);}}class _B2 extends AudioWorkletProcessor{static _C2=8;static _D2=4;static _E2=0.015;static _F2=0.4;static _G2=0.28;static _H2=0.7;static _I2=[1116,1188,1277,1356,1422,1491,1557,1617];static _J2=[1139,1211,1300,1379,1445,1514,1580,1640];static _K2=[556,441,341,225];static _L2=[579,464,364,248];static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",
defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_H1){super();this._r1();const _I1=_H1.outputChannelCount[0];this._M2=-1;this._N2=-1;this._O2=new Array(_I1);this._P2=new Array(_I1);const _Q2=[_B2._I2,_B2._J2];const _R2=[_B2._K2,_B2._L2];for(let c=0;c<_I1;++c){
this._O2[c]=new Array(_B2._C2);this._P2[c]=new Array(_B2._D2);for(let i=0;i<_B2._C2;++i)this._O2[c][i]=new _q2(_Q2[c%_Q2.length][i]);for(let i=0;i<_B2._D2;++i)this._P2[c][i]=new _A2(_R2[c%_R2.length][i]);}this._S2(0.5);this._y2(0.5);for(let c=0;c<_I1;++c)for(let i=0;i<_B2._D2;++i)this._P2[c][i]._w2(0.5);}process(_v1,_w1,parameters){const _x1=_v1[0];const _D1=_w1[0];const bypass=parameters.bypass;const size=parameters.size;const damp=parameters.damp;const mix=parameters.mix;for(let c=0;c<_x1.length;++c){const _y1=_x1[c];
const _E1=_D1[c];for(let _z1=0;_z1<_y1.length;++_z1){this._S2(size[_z1]??size[0]);this._y2(damp[_z1]??damp[0]);_E1[_z1]=_y1[_z1];let out=0;const _L1=_y1[_z1]*_B2._E2;for(let i=0;i<_B2._C2;++i)out+=this._O2[c][i].process(_L1);for(let i=0;i<_B2._D2;++i)out=this._P2[c][i].process(out);if(bypass[_z1]??bypass[0])continue;const _O1=(mix[_z1]??mix[0]);_E1[_z1]*=(1-_O1);_E1[_z1]+=(out*_O1);}}return this._s1;}_S2(_r2){if(_r2===this._M2)return;const size=(_r2*_B2._G2)+_B2._H2;for(let c=0;c<this._O2.length;++c)for(let i=0;
i<_B2._C2;++i)this._O2[c][i]._w2(size);this._M2=_r2;}_y2(_z2){if(_z2===this._N2)return;const damp=_z2*_B2._F2;for(let c=0;c<this._O2.length;++c)for(let i=0;i<_B2._C2;++i)this._O2[c][i]._y2(damp);this._N2=_z2;}}registerProcessor("reverb1-processor",_B2);class _T2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,minValue:0.0,maxValue:20.0},{name:"intensity",
automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_H1){super();this._r1();const _I1=_H1.outputChannelCount[0];this._U2=new Array(_I1).fill(1.0);this._V2=new Array(_I1).fill(0.0);this._W2=new Array(_I1).fill(_X2._Y2._Z2);this.__2=new Array(_I1);for(let c=0;c<_I1;++c){this.__2[c]=new _03();this.__2[c]._13(sampleRate);
this.__2[c]._23(this._U2[c]);this.__2[c]._33(this._W2[c]);if(c%2===1){this.__2[c]._43(this._V2[c]);}}}process(_v1,_w1,parameters){const _x1=_v1[0];const _D1=_w1[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let c=0;c<_x1.length;++c){const _y1=_x1[c];const _E1=_D1[c];for(let _z1=0;_z1<_y1.length;++_z1){_E1[_z1]=_y1[_z1];const _N1=rate[_z1]??rate[0];const _53=offset[_z1]??offset[0];const _63=shape[_z1]??shape[0];
this._73(c,_N1,_53,_63);const _83=this.__2[c]._U1();if((bypass[_z1]??bypass[0])>0.0){continue;}const i=intensity[_z1]??intensity[0];const out=_y1[_z1]*_83*i;_E1[_z1]*=(1.0-i);_E1[_z1]+=out;}}return this._s1;}_73(_W1,_93,_a3,_b3){if(_93!==this._U2[_W1]){this.__2[_W1]._23(_93);this._U2[_W1]=_93;}if(_a3!==this._V2[_W1]){if(_W1%2===1){this.__2[_W1]._43(_a3);}this._V2[_W1]=_a3;}if(_b3!==this._W2[_W1]){this.__2[_W1]._33(_b3);this._W2[_W1]=_b3;}}}registerProcessor("tremolo-processor",_T2);function _X2(){}_X2._Y2={
_Z2:0,_c3:1,_d3:2,_e3:3,_f3:4,_g3:5};_X2._h3=function(_i3){return 1.0-_i3;};_X2._j3=function(_i3){return _i3;};_X2._k3=function(_i3){return 0.5*(Math.sin((_i3*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_X2._l3=function(_i3){if(_i3<0.5){return 0.0;}return 1.0;};_X2._m3=function(_i3){if(_i3<0.5){return 2.0*_i3;}return 2.0-(2.0*_i3);};_X2._n3=[_X2._h3,_X2._j3,_X2._k3,_X2._l3,_X2._m3];_o3._p3=512;_o3._q3=1.0/_o3._p3;function _o3(_r3){this.data=new Float32Array(_o3._p3);for(let i=0;i<_o3._p3;++i){this.data[i]=_r3(i*_o3._q3);
}}_o3.prototype._U1=function(_i3){_i3=Math.max(0.0,_i3);_i3=Math.min(_i3,1.0);const _s3=_i3*_o3._p3;const _t3=~~_s3;const _u3=_s3-_t3;let _Z1=_t3;let __1=_Z1+1;if(_Z1>=_o3._p3){_Z1-=_o3._p3;}if(__1>=_o3._p3){__1-=_o3._p3;}const _02=this.data[_Z1];const _12=this.data[__1];return _02+(_12-_02)*_u3;};_03._v3=[];_03._w3=false;_03._x3=0.0;_03._y3=20.0;function _03(){this._z3=48000;this.shape=_X2._Y2._d3;this._A3=1.0;this._B3=0.0;this._q3=0.0;this._C3=0.0;if(_03._w3==true){return;}for(let i=0;i<_X2._Y2._g3;++i){
_03._v3[i]=new _o3(_X2._n3[i]);}_03._w3=true;}_03._D3=function(){return(_03._w3==true);};_03.prototype._13=function(_E3){this._z3=_E3;this._F3();};_03.prototype._23=function(_G3){_G3=Math.max(_03._x3,_G3);_G3=Math.min(_G3,_03._y3);this._A3=_G3;this._F3();};_03.prototype._43=function(_a3){_a3=Math.max(0.0,_a3);_a3=Math.min(_a3,1.0);const _H3=_a3-this._C3;this._C3=_a3;this._B3+=_H3;while(this._B3>=1.0){this._B3-=1.0;}while(this._B3<0.0){this._B3+=1.0;}};_03.prototype._33=function(_b3){_b3=Math.max(0,
_b3);_b3=Math.min(_b3,_X2._Y2._g3-1);this.shape=_b3;};_03.prototype._U1=function(){const result=_03._v3[this.shape]._U1(this._B3);this._B3+=this._q3;while(this._B3>=1.0){this._B3-=1.0;}return result;};_03.prototype._F3=function(){this._q3=this._A3/this._z3;};