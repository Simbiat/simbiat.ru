declare const pageTitle = " on Simbiat Software";
declare function init(): void;
declare function cleanGET(): void;
declare function hashCheck(hashUpdate: boolean): void;
declare function getMeta(metaName: string): string | null;
declare function timer(target: HTMLElement, increase?: boolean): void;
declare function colorValue(target: HTMLInputElement): void;
declare function colorValueOnEvent(event: Event): void;
declare function toggleSidebar(event: Event): void;
declare function toggleNav(event: Event): void;
declare function updateHistory(newUrl: string, title: string): void;
declare function ariaInit(item: HTMLInputElement): void;
declare function ariaNation(inputElement: HTMLInputElement): void;
declare function ariaNationOnEvent(event: Event): void;
declare function webShareInit(): void;
declare function webShare(): Promise<void>;
declare function ajax(url: string, formData?: FormData | null, type?: string, method?: string, timeout?: number, skipError?: boolean): Promise<any>;
declare function backToTop(event: Event): void;
declare function scrollToTop(): void;
declare function bicInit(): void;
declare function bicCalc(): void | boolean;
declare function bicStyle(element: HTMLSpanElement, newClass: string, text?: string): void;
declare function bicRefresh(event: Event): void;
declare function copyQuoteInit(): void;
declare function copyQuote(event: Event): void;
declare function placeholders(): void;
declare function detailsInit(): void;
declare function fftrackerInit(): void;
declare function ffTrackAdd(): void;
declare function ffTrackTypeChange(target: HTMLSelectElement): void;
declare const textInputTypes: string[];
declare const nonTextInputTypes: string[];
declare function formInit(): void;
declare const submitFunctions: {
    [key: string]: string;
};
declare function submitIntercept(formId: string): void;
declare function searchAction(event: Event): void;
declare function formEnter(event: KeyboardEvent): void | boolean;
declare function inputBackSpace(event: Event): void;
declare function autoNext(event: Event): void;
declare function pasteSplit(event: Event): Promise<void>;
declare function nextInput(initial: HTMLInputElement, reverse?: boolean): HTMLInputElement | boolean;
declare function rawurlencode(str: string): string;
declare let galleryCurrent: number;
declare let galleryList: Array<HTMLElement>;
declare function galleryInit(): void;
declare function scrollCarousel(event: Event): void;
declare function carouselDisable(carousel: HTMLElement): void;
declare function galleryOpen(image: HTMLElement, hashUpdate: boolean): void;
declare function galleryLoadImage(hashUpdate: boolean): void;
declare function galleryClose(): void;
declare function galleryCount(): void;
declare function galleryGetIndex(link: HTMLAnchorElement): number;
declare function galleryPrevious(): void;
declare function galleryNext(): void;
declare function checkZoom(): void;
declare function galleryZoom(): void;
declare function idToHeader(hTag: HTMLHeadingElement): void;
declare function anchorFromHeader(event: Event): void;
declare let notificationIndex: number;
declare function addSnackbar(text: string, color?: string, milliseconds?: number): void;
declare function removeSnack(snack: HTMLDialogElement): void;
declare function tooltipInit(): void;
declare function tooltipCursor(x: number, y: number): void;
declare function tabForTips(): void;
declare function addTooltips(): void;
declare function tooltip(element: HTMLElement): void;
declare function ucInit(): void;
declare function addMail(): boolean | void;
declare function deleteMail(event: Event): void;
declare function blockDeleteMail(): void;
declare function subscribeMail(event: Event): void;
declare function activationMail(event: Event): void;
declare function singInUpSubmit(): void;
declare function passwordChange(): void;
declare const emailRegex = "[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*";
declare const userRegex = "[^\\/\\\\\\[\\]:;|=$%#@&\\(\\)\\{\\}!,+*?<>\\0\\t\\r\\n\\x00-\\x1F\\x7F\\x0b\\f\\x85\\v\\cY\\b]{1,64}";
declare function showPassToggle(event: Event): void;
declare function passwordStrengthOnEvent(event: Event): void;
declare function passwordStrength(password: string): string;
declare function loginRadioCheck(): void;
