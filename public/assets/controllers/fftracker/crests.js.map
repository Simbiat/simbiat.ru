{"version":3,"file":"crests.js","sourceRoot":"/js/Pages/","sources":["fftracker/crests.ts"],"names":[],"mappings":"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","sourcesContent":["export class ffCrests\r\n{\r\n    private readonly form: HTMLFormElement | null = null;\r\n    private readonly background: HTMLInputElement | null = null;\r\n    private readonly frame: HTMLInputElement | null = null;\r\n    private readonly emblem: HTMLInputElement | null = null;\r\n    private readonly preview: HTMLDivElement | null = null;\r\n    private readonly backgroundImage: HTMLImageElement | null = null;\r\n    private readonly frameImage: HTMLImageElement | null = null;\r\n    private readonly emblemImage: HTMLImageElement | null = null;\r\n    \r\n    public constructor()\r\n    {\r\n        //Get form\r\n        this.form = document.querySelector('#ff_merge_crest');\r\n        //Get input fields\r\n        this.background = document.querySelector('#crest_background');\r\n        this.frame = document.querySelector('#crest_frame');\r\n        this.emblem = document.querySelector('#crest_emblem');\r\n        //Get image elements\r\n        this.preview = document.querySelector('#crest_preview');\r\n        this.backgroundImage = document.querySelector('#preview_background');\r\n        this.frameImage = document.querySelector('#preview_frame');\r\n        this.emblemImage = document.querySelector('#preview_emblem');\r\n        if (this.background && this.frame && this.emblem && this.backgroundImage && this.frameImage && this.emblemImage) {\r\n            [this.background, this.frame, this.emblem].forEach((item) => {\r\n                item.addEventListener('click', () => {\r\n                    this.updatePreview();\r\n                });\r\n                ['change', 'input', 'paste'].forEach((eventType: string) => {\r\n                    item.addEventListener(eventType, this.updatePreview.bind(this));\r\n                });\r\n            });\r\n            this.updatePreview();\r\n            if (this.form) {\r\n                submitIntercept(this.form, this.merge.bind(this));\r\n            }\r\n        }\r\n    }\r\n    \r\n    private updatePreview(): void\r\n    {\r\n        if (this.background && this.frame && this.emblem && this.backgroundImage && this.frameImage && this.emblemImage) {\r\n            //Get values of the fields\r\n            const background: string = this.background.value;\r\n            const frame: string = this.frame.value;\r\n            const emblem: string = this.emblem.value;\r\n            //Reset images\r\n            this.backgroundImage.setAttribute('src', '');\r\n            this.frameImage.setAttribute('src', '');\r\n            this.emblemImage.setAttribute('src', '');\r\n            //Generate links and update src of image tags\r\n            if (!empty(background) && this.background.checkValidity()) {\r\n                this.backgroundImage.setAttribute('src', `/assets/images/fftracker/crests-components/backgrounds/${background.slice(0, 3).toLowerCase()}/${background}`);\r\n            }\r\n            if (!empty(frame) && this.frame.checkValidity()) {\r\n                this.frameImage.setAttribute('src', `/assets/images/fftracker/crests-components/frames/${frame}`);\r\n            }\r\n            if (!empty(emblem) && this.emblem.checkValidity()) {\r\n                this.emblemImage.setAttribute('src', `/assets/images/fftracker/crests-components/emblems/${emblem.slice(0, 3).toLowerCase()}/${emblem}`);\r\n            }\r\n            if (this.preview) {\r\n                //Hide preview element if it's empty\r\n                if (empty(this.backgroundImage.getAttribute('src')) && empty(this.frameImage.getAttribute('src')) && empty(this.emblemImage.getAttribute('src'))) {\r\n                    this.preview.classList.add('hidden');\r\n                } else {\r\n                    this.preview.classList.remove('hidden');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    private merge(): void\r\n    {\r\n        if (this.form) {\r\n            const formData = new FormData(this.form);\r\n            const button = document.querySelector('#ff_merge_crest_submit');\r\n            buttonToggle(button as HTMLInputElement);\r\n            void ajax(`${location.protocol}//${location.host}/api/fftracker/merge_crest`, formData, 'json', 'POST', 60000, true).\r\n                then((response) => {\r\n                    const data = response as ajaxJSONResponse;\r\n                    if (data.data === true) {\r\n                        addSnackbar(`Crest merged successfully. Click <a href=\"${data.location}\" download>here</a> to download.`, 'success', 0);\r\n                    } else {\r\n                        addSnackbar(data.reason, 'failure', 10000);\r\n                    }\r\n                    buttonToggle(button as HTMLInputElement);\r\n                });\r\n        }\r\n    }\r\n}\r\n"]}