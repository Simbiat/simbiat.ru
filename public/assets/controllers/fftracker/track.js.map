{"version":3,"file":"track.js","sourceRoot":"/js/Pages/","sources":["fftracker/track.ts"],"names":[],"mappings":"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","sourcesContent":["export class ffTrack\r\n{\r\n    private readonly form: HTMLFormElement | null = null;\r\n    private readonly select: HTMLSelectElement | null = null;\r\n    private readonly idInput: HTMLInputElement | null = null;\r\n\r\n    public constructor()\r\n    {\r\n        //Get form\r\n        this.form = document.querySelector('#ff_track_register');\r\n        //Get the ID input\r\n        this.idInput = document.querySelector('#ff_track_id');\r\n        //Get select\r\n        this.select = document.querySelector('#ff_track_type');\r\n        if (this.select) {\r\n            this.select.addEventListener('change', () => {\r\n                this.typeChange();\r\n            });\r\n        }\r\n        if (this.form) {\r\n            submitIntercept(this.form, this.add.bind(this));\r\n        }\r\n    }\r\n\r\n    //Track the entity\r\n    private add(): void\r\n    {\r\n        if (this.select) {\r\n            const selectedOption = this.select.selectedOptions[0];\r\n            let selectText: string;\r\n            if (selectedOption) {\r\n                selectText = selectedOption.text;\r\n            } else {\r\n                selectText = 'Character';\r\n            }\r\n            if (this.idInput) {\r\n                const button = document.querySelector('#ff_track_submit');\r\n                buttonToggle(button as HTMLInputElement);\r\n                void ajax(`${location.protocol}//${location.host}/api/fftracker/${this.select.value}/${this.idInput.value}`, null, 'json', 'POST', AJAX_TIMEOUT, true).\r\n                    then((response) => {\r\n                        const data = response as ajaxJSONResponse;\r\n                        if (data.data === true) {\r\n                            addSnackbar(`${selectText} with ID ${this.idInput?.value ?? ''} was registered. Check <a href=\"${data.location}\" target=\"_blank\">here</a>.`, 'success', 0);\r\n                        } else if (data.status === 404) {\r\n                            addSnackbar(`${selectText} with ID ${this.idInput?.value ?? ''} was not found on Lodestone.`, 'failure', SNACKBAR_FAIL_LIFE);\r\n                        } else if ((/^ID `.*` is already registered$/ui).exec(data.reason)) {\r\n                            addSnackbar(`${data.reason}. Check <a href=\"${data.location}\" target=\"_blank\">here</a>.`, 'warning', 0);\r\n                        } else {\r\n                            addSnackbar(data.reason, 'failure', SNACKBAR_FAIL_LIFE);\r\n                        }\r\n                        buttonToggle(button as HTMLInputElement);\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    //Updates pattern for input field\r\n    private typeChange(): void\r\n    {\r\n        if (this.select && this.idInput) {\r\n            //Set default value for pattern\r\n            let pattern = '^\\\\d{1,20}$';\r\n            //Update pattern value\r\n            if (this.select.value === 'pvpteams' || this.select.value === 'crossworld_linkshells') {\r\n                pattern = '^[\\\\da-z]{40}$';\r\n            }\r\n            //Set pattern for the element\r\n            this.idInput.setAttribute('pattern', pattern);\r\n        }\r\n    }\r\n}\r\n"]}