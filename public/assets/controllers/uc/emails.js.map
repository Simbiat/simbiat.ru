{"version":3,"file":"emails.js","sourceRoot":"/js/Pages/","sources":["uc/emails.ts"],"names":[],"mappings":"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","sourcesContent":["export class Emails\r\n{\r\n    private readonly addMailForm: HTMLFormElement | null = null;\r\n    private readonly submit: HTMLInputElement | null = null;\r\n    private readonly template: HTMLTemplateElement | null = null;\r\n    private readonly tbody: HTMLTableElement | null = null;\r\n\r\n    public constructor()\r\n    {\r\n        this.addMailForm = document.querySelector('#addMailForm');\r\n        this.template = document.querySelector('#email_row');\r\n        this.tbody = document.querySelector('#emailsList tbody');\r\n        if (this.addMailForm) {\r\n            this.submit = this.addMailForm.querySelector('#addMail_submit');\r\n            submitIntercept(this.addMailForm, this.add.bind(this));\r\n            //Listener for mail activation buttons\r\n            document.querySelectorAll('.mail_activation').forEach((item) => {\r\n                item.addEventListener('click', (event: Event) => {\r\n                    Emails.activate(event.target as HTMLInputElement);\r\n                });\r\n            });\r\n            //Listener for mail subscription checkbox\r\n            document.querySelectorAll('[id^=subscription_checkbox_]').forEach((item) => {\r\n                //Tracking click to be able to roll back change easily\r\n                item.addEventListener('click', (event: Event) => {\r\n                    Emails.subscribe(event);\r\n                });\r\n            });\r\n            //Listener for mail deletion buttons\r\n            document.querySelectorAll('.mail_deletion').forEach((item) => {\r\n                item.addEventListener('click', (event: Event) => {\r\n                    Emails.delete(event.target as HTMLInputElement);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    \r\n    private add(): void\r\n    {\r\n        if (this.addMailForm && this.submit) {\r\n            //Get form data\r\n            const formData = new FormData(this.addMailForm);\r\n            if (empty(formData.get('email'))) {\r\n                addSnackbar('Please, enter a valid email address', 'failure');\r\n                return;\r\n            }\r\n            const email = String(formData.get('email'));\r\n            buttonToggle(this.submit);\r\n            void ajax(`${location.protocol}//${location.host}/api/uc/emails/add`, formData, 'json', 'POST', 60000, true).\r\n                then((response) => {\r\n                    const data = response as ajaxJSONResponse;\r\n                    if (data.data === true) {\r\n                        //Add row to table\r\n                        this.addRow(email);\r\n                        //Refresh delete buttons' status\r\n                        Emails.blockDelete();\r\n                        if (this.addMailForm) {\r\n                            this.addMailForm.reset();\r\n                        }\r\n                        addSnackbar(`${email} added`, 'success');\r\n                    } else {\r\n                        addSnackbar(data.reason, 'failure', 10000);\r\n                    }\r\n                    if (this.submit) {\r\n                        buttonToggle(this.submit);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n    \r\n    private addRow(email: string): void\r\n    {\r\n        if (this.tbody && this.template) {\r\n            const clone = this.template.content.cloneNode(true) as HTMLElement;\r\n            const cells = clone.querySelectorAll('td');\r\n            //Set email as value of the first cell\r\n            if (cells[0]) {\r\n                cells[0].innerHTML = email;\r\n            }\r\n            if (cells[1]) {\r\n                //Update attributes of the second cell's input\r\n                const inputElement1: HTMLInputElement | null = cells[1].querySelector('input');\r\n                if (inputElement1) {\r\n                    inputElement1.setAttribute('data-email', email);\r\n                    //Attach listener\r\n                    inputElement1.addEventListener('click', (event: Event) => {\r\n                        Emails.activate(event.target as HTMLInputElement);\r\n                    });\r\n                }\r\n                //Update attributes of the second cell's spinner\r\n                const spinner1: HTMLImageElement | null = cells[1].querySelector('img');\r\n                if (spinner1) {\r\n                    spinner1.setAttribute('data-tooltip', String(spinner1.getAttribute('data-tooltip')).\r\n                        replace('email', email));\r\n                    spinner1.setAttribute('alt', String(spinner1.getAttribute('alt')).\r\n                        replace('email', email));\r\n                }\r\n            }\r\n            if (cells[3]) {\r\n                //Update attributes of the 4th cell's input\r\n                const inputElement3: HTMLInputElement | null = cells[3].querySelector('input');\r\n                if (inputElement3) {\r\n                    inputElement3.setAttribute('data-email', email);\r\n                    inputElement3.setAttribute('data-tooltip', String(inputElement3.getAttribute('data-tooltip')).\r\n                        replace('email', email));\r\n                    inputElement3.setAttribute('alt', String(inputElement3.getAttribute('alt')).\r\n                        replace('email', email));\r\n                    //Attach listener\r\n                    inputElement3.addEventListener('click', (event: Event) => {\r\n                        Emails.delete(event.target as HTMLInputElement);\r\n                    });\r\n                }\r\n                //Update attributes of the 4th cell's spinner\r\n                const spinner3: HTMLImageElement | null = cells[3].querySelector('img');\r\n                if (spinner3) {\r\n                    spinner3.setAttribute('data-tooltip', String(spinner3.getAttribute('data-tooltip')).\r\n                        replace('email', email));\r\n                    spinner3.setAttribute('alt', String(spinner3.getAttribute('alt')).\r\n                        replace('email', email));\r\n                }\r\n            }\r\n            //Attach the row to table body\r\n            this.tbody.appendChild(clone);\r\n        }\r\n    }\r\n    \r\n    private static delete(button: HTMLInputElement): void\r\n    {\r\n        //Generate form data\r\n        const formData = new FormData();\r\n        const email = button.getAttribute('data-email') ?? '';\r\n        formData.set('email', email);\r\n        buttonToggle(button);\r\n        void ajax(`${location.protocol}//${location.host}/api/uc/emails/delete`, formData, 'json', 'DELETE', 60000, true).then((response) => {\r\n            const data = response as ajaxJSONResponse;\r\n            if (data.data === true) {\r\n                deleteRow(button);\r\n                Emails.blockDelete();\r\n                addSnackbar(`${email} removed`, 'success');\r\n            } else {\r\n                buttonToggle(button);\r\n                addSnackbar(data.reason, 'failure', 10000);\r\n            }\r\n        });\r\n    }\r\n\r\n    //Function to block button for mail removal if we have less than 2 confirmed mails\r\n    private static blockDelete(): void\r\n    {\r\n        const confirmedMail = document.querySelectorAll('.mail_confirmed').length;\r\n        document.querySelectorAll('.mail_deletion').forEach((item) => {\r\n            const input = item as HTMLInputElement;\r\n            const cell = input.parentElement;\r\n            if (cell) {\r\n                const row = cell.parentElement;\r\n                if (row) {\r\n                    //Check if row is for confirmed mail\r\n                    if (row.querySelectorAll('.mail_confirmed').length > 0) {\r\n                        input.disabled = confirmedMail < 2;\r\n                    } else {\r\n                        input.disabled = false;\r\n                        //Update tooltips\r\n                        if (input.hasAttribute('data-tooltip') && input.getAttribute('data-tooltip') === 'Can\\'t delete') {\r\n                            const email = String(row.querySelector('td')?.innerHTML);\r\n                            input.setAttribute('data-tooltip', `Delete ${email}`);\r\n                            const spinner = cell.querySelector('.spinner');\r\n                            spinner?.setAttribute('data-tooltip', `Removing ${email}...`);\r\n                            spinner?.setAttribute('alt', `Removing ${email}...`);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    private static subscribe(event: Event): void\r\n    {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const checkbox = event.target;\r\n        if (!checkbox) {\r\n            return;\r\n        }\r\n        if (!(checkbox as HTMLInputElement).hasAttribute('data-email')) {\r\n            return;\r\n        }\r\n        //Get verb\r\n        let verb;\r\n        if ((checkbox as HTMLInputElement).checked) {\r\n            verb = 'subscribe';\r\n        } else {\r\n            verb = 'unsubscribe';\r\n        }\r\n        buttonToggle(checkbox as HTMLInputElement);\r\n        //Generate form data\r\n        const email = String((checkbox as HTMLInputElement).getAttribute('data-email'));\r\n        const formData = new FormData();\r\n        formData.set('verb', verb);\r\n        formData.set('email', email);\r\n        void ajax(`${location.protocol}//${location.host}/api/uc/emails/${verb}`, formData, 'json', 'PATCH', 60000, true).then((response) => {\r\n            const data = response as ajaxJSONResponse;\r\n            if (data.data === true) {\r\n                if ((checkbox as HTMLInputElement).checked) {\r\n                    (checkbox as HTMLInputElement).checked = false;\r\n                    addSnackbar(`${email} unsubscribed`, 'success');\r\n                } else {\r\n                    (checkbox as HTMLInputElement).checked = true;\r\n                    addSnackbar(`${email} subscribed`, 'success');\r\n                }\r\n            } else {\r\n                addSnackbar(data.reason, 'failure', 10000);\r\n            }\r\n            buttonToggle(checkbox as HTMLInputElement);\r\n        });\r\n    }\r\n    \r\n    private static activate(button: HTMLInputElement): void\r\n    {\r\n        //Generate form data\r\n        const email = button.getAttribute('data-email') ?? '';\r\n        const formData = new FormData();\r\n        formData.set('verb', 'activate');\r\n        formData.set('email', email);\r\n        buttonToggle(button);\r\n        void ajax(`${location.protocol}//${location.host}/api/uc/emails/activate`, formData, 'json', 'PATCH', 60000, true).then((response) => {\r\n            const data = response as ajaxJSONResponse;\r\n            if (data.data === true) {\r\n                addSnackbar(`Activation email sent to ${email}`, 'success');\r\n            } else {\r\n                addSnackbar(data.reason, 'failure', 10000);\r\n            }\r\n            buttonToggle(button);\r\n        });\r\n    }\r\n}\r\n"]}