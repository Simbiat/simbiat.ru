{"version":3,"file":"sessions.js","sourceRoot":"/js/Pages/","sources":["uc/sessions.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,YAAY;IAEJ,aAAa,CAA+B;IAC5C,cAAc,CAA+B;IAE9D;QAEI,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,gBAAgB,CAAC,kCAAkC,CAAC,CAAC;QACnF,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,gBAAgB,CAAC,mCAAmC,CAAC,CAAC;QAErF,QAAQ,CAAC,gBAAgB,CAAC,qCAAqC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YAC9E,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAiB,EAAE,EAAE;gBACjD,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,MAA0B,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,gBAAgB,CAAC,mCAAmC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YAC5E,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAiB,EAAE,EAAE;gBACjD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAA0B,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,SAAS,CAAC,MAAwB;QAEtC,IAAI,OAAqC,CAAC;QAC1C,IAAI,IAAY,CAAC;QACjB,IAAI,MAAM,CAAC,EAAE,KAAK,gBAAgB,EAAE,CAAC;YACjC,IAAI,GAAG,SAAS,CAAC;YACjB,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;QACjC,CAAC;aAAM,IAAI,MAAM,CAAC,EAAE,KAAK,iBAAiB,EAAE,CAAC;YACzC,IAAI,GAAG,UAAU,CAAC;YAClB,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAClC,CAAC;aAAM,CAAC;YACJ,WAAW,CAAC,qBAAqB,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;YACrD,OAAO;QACX,CAAC;QAED,MAAM,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;QACrD,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YAC5B,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,WAAW,CAAC,OAAO,IAAI,8BAA8B,EAAE,SAAS,CAAC,CAAC;IACtE,CAAC;IAEO,MAAM,CAAC,MAAM,CAAC,MAAwB,EAAE,QAAQ,GAAG,IAAI;QAG3D,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,IAAI,IAAY,CAAC;QACjB,IAAI,YAAoB,CAAC;QACzB,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE,CAAC;YAC/C,IAAI,GAAG,SAAS,CAAC;YACjB,YAAY,GAAG,QAAQ,CAAC;YACxB,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QACvE,CAAC;aAAM,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,CAAC;YACvD,IAAI,GAAG,UAAU,CAAC;YAClB,YAAY,GAAG,SAAS,CAAC;YACzB,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACzE,CAAC;aAAM,CAAC;YACJ,WAAW,CAAC,qBAAqB,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;YACrD,OAAO;QACX,CAAC;QACD,YAAY,CAAC,MAAM,CAAC,CAAC;QACrB,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,IAAI,WAAW,IAAI,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;YACjI,MAAM,IAAI,GAAG,QAA4B,CAAC;YAC1C,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE,CAAC;gBACrB,SAAS,CAAC,MAAM,CAAC,CAAC;gBAClB,IAAI,QAAQ,EAAE,CAAC;oBACX,WAAW,CAAC,GAAG,YAAY,UAAU,EAAE,SAAS,CAAC,CAAC;gBACtD,CAAC;YACL,CAAC;iBAAM,CAAC;gBACJ,YAAY,CAAC,MAAM,CAAC,CAAC;gBACrB,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;YAC/C,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;CACJ","sourcesContent":["export class EditSessions\r\n{\r\n    private readonly cookieButtons: NodeListOf<HTMLInputElement>;\r\n    private readonly sessionButtons: NodeListOf<HTMLInputElement>;\r\n    \r\n    public constructor()\r\n    {\r\n        this.cookieButtons = document.querySelectorAll('.cookie_deletion:not([disabled])');\r\n        this.sessionButtons = document.querySelectorAll('.session_deletion:not([disabled])');\r\n        //Listener for deletion buttons\r\n        document.querySelectorAll('.cookie_deletion, .session_deletion').forEach((item) => {\r\n            item.addEventListener('click', (event: MouseEvent) => {\r\n                EditSessions.delete(event.target as HTMLInputElement);\r\n            });\r\n        });\r\n        //Listener for \"Delete all\" buttons\r\n        document.querySelectorAll('#delete_cookies, #delete_sessions').forEach((item) => {\r\n            item.addEventListener('click', (event: MouseEvent) => {\r\n                this.deleteAll(event.target as HTMLInputElement);\r\n            });\r\n        });\r\n    }\r\n    \r\n    private deleteAll(button: HTMLInputElement): void\r\n    {\r\n        let buttons: NodeListOf<HTMLInputElement>;\r\n        let type: string;\r\n        if (button.id === 'delete_cookies') {\r\n            type = 'cookies';\r\n            buttons = this.cookieButtons;\r\n        } else if (button.id === 'delete_sessions') {\r\n            type = 'sessions';\r\n            buttons = this.sessionButtons;\r\n        } else {\r\n            addSnackbar('Unknown button type', 'failure', 10000);\r\n            return;\r\n        }\r\n        //Traverse in reverse, because of numeric row IDs used for rows removal\r\n        const ArrayOfButtons = Array.from(buttons).reverse();\r\n        ArrayOfButtons.forEach((item) => {\r\n            EditSessions.delete(item, false);\r\n        });\r\n        addSnackbar(`All ${type} except current were removed`, 'success');\r\n    }\r\n    \r\n    private static delete(button: HTMLInputElement, singular = true): void\r\n    {\r\n        //Generate form data\r\n        const formData = new FormData();\r\n        let type: string;\r\n        let typeSingular: string;\r\n        if (button.classList.contains('cookie_deletion')) {\r\n            type = 'cookies';\r\n            typeSingular = 'Cookie';\r\n            formData.set('cookie', String(button.getAttribute('data-cookie')));\r\n        } else if (button.classList.contains('session_deletion')) {\r\n            type = 'sessions';\r\n            typeSingular = 'Session';\r\n            formData.set('session', String(button.getAttribute('data-session')));\r\n        } else {\r\n            addSnackbar('Unknown button type', 'failure', 10000);\r\n            return;\r\n        }\r\n        buttonToggle(button);\r\n        void ajax(`${location.protocol}//${location.host}/api/uc/${type}/delete`, formData, 'json', 'DELETE', 60000, true).then((response) => {\r\n            const data = response as ajaxJSONResponse;\r\n            if (data.data === true) {\r\n                deleteRow(button);\r\n                if (singular) {\r\n                    addSnackbar(`${typeSingular} removed`, 'success');\r\n                }\r\n            } else {\r\n                buttonToggle(button);\r\n                addSnackbar(data.reason, 'failure', 10000);\r\n            }\r\n        });\r\n    }\r\n}\r\n"]}