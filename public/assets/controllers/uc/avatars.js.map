{"version":3,"file":"avatars.js","sourceRoot":"/js/Pages/","sources":["uc/avatars.ts"],"names":[],"mappings":"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","sourcesContent":["export class EditAvatars\r\n{\r\n    private readonly form: HTMLFormElement | null = null;\r\n    private readonly currentAvatar: HTMLImageElement | null = null;\r\n    private readonly sidebarAvatar: HTMLImageElement | null = null;\r\n    private readonly avatarFile: HTMLInputElement | null = null;\r\n    private readonly avatarsList: HTMLUListElement | null = null;\r\n    private readonly template: HTMLTemplateElement | null = null;\r\n    \r\n    public constructor()\r\n    {\r\n        this.currentAvatar = document.querySelector('#currentAvatar');\r\n        this.sidebarAvatar = document.querySelector('#sidebarAvatar');\r\n        this.avatarFile = document.querySelector('#profile_avatar_file');\r\n        this.form = document.querySelector('#profile_avatar');\r\n        this.avatarsList = document.querySelector('#avatars_list');\r\n        this.template = document.querySelector('#avatar_item');\r\n        //Attach form listener\r\n        if (this.form) {\r\n            submitIntercept(this.form, this.upload.bind(this));\r\n        }\r\n        this.listen();\r\n    }\r\n    \r\n    private listen(): void\r\n    {\r\n        //Listen to avatar change\r\n        document.querySelectorAll('input[id^=\"avatar_\"]').forEach((item) => {\r\n            item.addEventListener('change', (event: Event) => {\r\n                this.setActive(event.target as HTMLInputElement);\r\n            });\r\n        });\r\n        //Listen to avatar deletion\r\n        document.querySelectorAll('input[id^=\"del_\"]').forEach((item) => {\r\n            item.addEventListener('click', (event: Event) => {\r\n                this.delete(event.target as HTMLInputElement);\r\n            });\r\n        });\r\n    }\r\n    \r\n    //Upload a new avatar\r\n    private upload(): void\r\n    {\r\n        if (this.form) {\r\n            if (this.avatarFile?.files && this.avatarFile.files.length === 0) {\r\n                addSnackbar('No file selected', 'failure', 10000);\r\n                return;\r\n            }\r\n            if (this.avatarFile?.files && this.avatarFile.files[0] && this.avatarFile.files[0].size === 0) {\r\n                addSnackbar('Selected file is empty', 'failure', 10000);\r\n                return;\r\n            }\r\n            //Get form data\r\n            const formData = new FormData(this.form);\r\n            const button = this.form.querySelector('#avatar_submit');\r\n            buttonToggle(button as HTMLInputElement);\r\n            void ajax(`${location.protocol}//${location.host}/api/uc/avatars/add`, formData, 'json', 'POST', 60000, true).\r\n                then((response) => {\r\n                    const data = response as ajaxJSONResponse;\r\n                    if (data.data === true) {\r\n                        //Add avatar to the list\r\n                        this.addToList(data.location);\r\n                    } else {\r\n                        addSnackbar(data.reason, 'failure', 10000);\r\n                    }\r\n                    //Remove file and preview\r\n                    if (this.avatarFile) {\r\n                        this.avatarFile.value = '';\r\n                        this.avatarFile.dispatchEvent(new Event('change'));\r\n                    }\r\n                    buttonToggle(button as HTMLInputElement);\r\n                });\r\n        }\r\n    }\r\n    \r\n    //Change current avatar\r\n    private setActive(avatar: HTMLInputElement): void\r\n    {\r\n        //Get li element\r\n        const li = avatar.parentElement?.closest('li');\r\n        if (li) {\r\n            const formData = new FormData();\r\n            formData.append('avatar', (li as HTMLElement).id);\r\n            void ajax(`${location.protocol}//${location.host}/api/uc/avatars/setactive`, formData, 'json', 'PATCH', 60000, true).then((response) => {\r\n                const data = response as ajaxJSONResponse;\r\n                if (data.data === true) {\r\n                    //Update avatar on page\r\n                    this.refresh(data.location);\r\n                } else {\r\n                    avatar.checked = false;\r\n                    addSnackbar(data.reason, 'failure', 10000);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    \r\n    //Function to refresh the current avatar on the page without reloading\r\n    private refresh(avatar: string): void {\r\n        const hash = basename(avatar);\r\n        if (this.avatarsList) {\r\n            this.avatarsList.querySelectorAll('li').\r\n                forEach((item) => {\r\n                    const radio = item.querySelector('input[id^=avatar_]');\r\n                    const close = item.querySelector('input[id^=del_]');\r\n                    //Deselect all nodes, that are not current one\r\n                    if (item.id === hash) {\r\n                        (radio as HTMLInputElement).checked = true;\r\n                        //Remove \"delete\" button\r\n                        (close as HTMLInputElement).classList.add('hidden');\r\n                        (close as HTMLInputElement).disabled = true;\r\n                    } else {\r\n                        (radio as HTMLInputElement).checked = false;\r\n                        //Show \"delete\" button\r\n                        (close as HTMLInputElement).classList.remove('hidden');\r\n                        (close as HTMLInputElement).disabled = false;\r\n                    }\r\n                });\r\n            if (this.currentAvatar) {\r\n                this.currentAvatar.src = avatar;\r\n            }\r\n            if (this.sidebarAvatar) {\r\n                this.sidebarAvatar.src = avatar;\r\n            }\r\n        }\r\n    }\r\n    \r\n    //Function to add avatar to list\r\n    private addToList(avatar: string): void\r\n    {\r\n        const hash = basename(avatar);\r\n        if (this.template) {\r\n            //Create list item\r\n            const clone = this.template.content.cloneNode(true) as HTMLElement;\r\n            //Set ID for the item\r\n            const li = clone.querySelector('li');\r\n            if (li) {\r\n                li.id = hash;\r\n            }\r\n            //Set attributes for inputs and attach listeners\r\n            const inputs = clone.querySelectorAll('input');\r\n            if (inputs[0]) {\r\n                inputs[0].id = inputs[0].id.replace('hash', hash);\r\n                inputs[0].addEventListener('change', (event: Event) => {\r\n                    this.setActive(event.target as HTMLInputElement);\r\n                });\r\n            }\r\n            if (inputs[1]) {\r\n                inputs[1].id = inputs[1].id.replace('hash', hash);\r\n                inputs[1].addEventListener('click', (event: Event) => {\r\n                    this.delete(event.target as HTMLInputElement);\r\n                });\r\n            }\r\n            //Update label\r\n            const label: HTMLLabelElement | null = clone.querySelector('label');\r\n            if (label) {\r\n                label.setAttribute('for', String(label.getAttribute('for')).replace('hash', hash));\r\n            }\r\n            //Update image source\r\n            const img: HTMLImageElement | null = clone.querySelector('img');\r\n            if (img) {\r\n                img.src = avatar;\r\n            }\r\n            //Attach new item to the list\r\n            if (this.avatarsList) {\r\n                this.avatarsList.appendChild(clone);\r\n            }\r\n            //Update avatar on the page\r\n            this.refresh(avatar);\r\n        }\r\n    }\r\n    \r\n    //Function to delete avatar\r\n    private delete(avatar: HTMLInputElement): void\r\n    {\r\n        //Get li element\r\n        const li = avatar.parentElement?.closest('li');\r\n        if (li) {\r\n            const formData = new FormData();\r\n            formData.append('avatar', (li as HTMLElement).id);\r\n            void ajax(`${location.protocol}//${location.host}/api/uc/avatars/delete`, formData, 'json', 'DELETE', 60000, true).then((response) => {\r\n                const data = response as ajaxJSONResponse;\r\n                if (data.data === true) {\r\n                    //Delete from list\r\n                    (li as HTMLElement).remove();\r\n                    //Update avatar on page\r\n                    this.refresh(data.location);\r\n                } else {\r\n                    addSnackbar(data.reason, 'failure', 10000);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n"]}