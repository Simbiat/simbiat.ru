{"version":3,"file":"posts.js","sourceRoot":"/js/Pages/","sources":["talks/posts.ts"],"names":[],"mappings":"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","sourcesContent":["export class Posts\r\n{\r\n    private readonly postForm: HTMLFormElement | null = null;\r\n    private readonly deletePostButton: HTMLInputElement | null = null;\r\n    \r\n    public constructor()\r\n    {\r\n        this.postForm = document.querySelector('post-form form');\r\n        this.deletePostButton = document.querySelector('#delete_post');\r\n        //Listener for form\r\n        if (this.postForm) {\r\n            submitIntercept(this.postForm, this.editPost.bind(this));\r\n        }\r\n        //Listener for deletion\r\n        if (this.deletePostButton) {\r\n            this.deletePostButton.addEventListener('click', () => {\r\n                this.deletePost();\r\n            });\r\n        }\r\n    }\r\n    \r\n    private editPost(): void\r\n    {\r\n        if (this.postForm) {\r\n            //Get submit button\r\n            const button = this.postForm.querySelector('input[type=submit]');\r\n            //Get form data\r\n            const formData = new FormData(this.postForm);\r\n            buttonToggle(button as HTMLInputElement);\r\n            ajax(`${location.protocol}//${location.host}/api/talks/posts/${String(formData.get('postForm[postid]') ?? '0')}/edit`, formData, 'json', 'POST', ajaxTimeout, true)\r\n                .then((response) => {\r\n                    const data = response as ajaxJSONResponse;\r\n                    if (data.data === true) {\r\n                        //Notify TinyMCE, that data was saved\r\n                        if (this.postForm) {\r\n                            const textarea = this.postForm.querySelector('textarea');\r\n                            if (textarea && !empty(textarea.id)) {\r\n                                saveTinyMCE(textarea.id);\r\n                            }\r\n                        }\r\n                        addSnackbar('Post updated. Reloading...', 'success');\r\n                        //pageRefresh();\r\n                        window.location.href = data.location;\r\n                    } else {\r\n                        if (data.location) {\r\n                            addSnackbar(data.reason + ` View the post <a href=\"${data.location}\" target=\"_blank\">here</a>.`, 'failure', 0);\r\n                        } else {\r\n                            addSnackbar(data.reason, 'failure', snackbarFailLife);\r\n                        }\r\n                        buttonToggle(button as HTMLInputElement);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n    \r\n    private deletePost(): void\r\n    {\r\n        if (this.deletePostButton) {\r\n            if (confirm('This is the last chance to back out.\\nIf you press \\'OK\\' this post will be permanently deleted.\\nPress \\'Cancel\\' to cancel the action.')) {\r\n                const id = this.deletePostButton.getAttribute('data-post') ?? '';\r\n                if (!empty(id)) {\r\n                    buttonToggle(this.deletePostButton);\r\n                    ajax(`${location.protocol}//${location.host}/api/talks/posts/${id}/delete`, null, 'json', 'DELETE', ajaxTimeout, true)\r\n                        .then((response) => {\r\n                            const data = response as ajaxJSONResponse;\r\n                            if (data.data === true) {\r\n                                addSnackbar('Post removed. Redirecting to thread...', 'success');\r\n                                window.location.href = data.location;\r\n                            } else {\r\n                                addSnackbar(data.reason, 'failure', snackbarFailLife);\r\n                            }\r\n                            if (this.deletePostButton) {\r\n                                buttonToggle(this.deletePostButton);\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}