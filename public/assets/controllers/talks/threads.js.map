{"version":3,"file":"threads.js","sourceRoot":"/js/Pages/","sources":["talks/threads.ts"],"names":[],"mappings":"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","sourcesContent":["export class Threads\r\n{\r\n    private readonly addPostForm: HTMLFormElement | null = null;\r\n    private readonly editThreadForm: HTMLFormElement | null = null;\r\n    private readonly closeThreadButton: HTMLInputElement | null = null;\r\n    private readonly deleteThreadButton: HTMLInputElement | null = null;\r\n    private readonly postForm: PostForm | null = null;\r\n    \r\n    public constructor()\r\n    {\r\n        this.addPostForm = document.querySelector('#postForm');\r\n        this.editThreadForm = document.querySelector('#editThreadForm');\r\n        this.closeThreadButton = document.querySelector('#close_thread');\r\n        this.deleteThreadButton = document.querySelector('#delete_thread');\r\n        this.postForm = document.querySelector('post-form');\r\n        if (this.addPostForm) {\r\n            submitIntercept(this.addPostForm, this.addPost.bind(this));\r\n        }\r\n        if (this.editThreadForm) {\r\n            submitIntercept(this.editThreadForm, this.editThread.bind(this));\r\n        }\r\n        //Listener for closure\r\n        if (this.closeThreadButton) {\r\n            this.closeThreadButton.addEventListener('click', () => {\r\n                this.closeThread();\r\n            });\r\n        }\r\n        //Listener for deletion\r\n        if (this.deleteThreadButton) {\r\n            this.deleteThreadButton.addEventListener('click', () => {\r\n                this.deleteThread();\r\n            });\r\n        }\r\n        //Listener for `reply to` buttons\r\n        document.querySelectorAll('.reply_to_button')\r\n                .forEach((item) => {\r\n                    //Tracking click to be able to roll back change easily\r\n                    (item as HTMLElement).addEventListener('click', (event: MouseEvent) => {\r\n                        this.replyTo(event.target as HTMLInputElement);\r\n                    });\r\n                });\r\n    }\r\n    \r\n    private replyTo(button: HTMLInputElement): void\r\n    {\r\n        //Get the post's ID\r\n        const reply_to = button.getAttribute('data-post_id') ?? '';\r\n        if (this.postForm && reply_to) {\r\n            this.postForm.replyTo(reply_to);\r\n        }\r\n    }\r\n    \r\n    private addPost(): void\r\n    {\r\n        if (this.addPostForm) {\r\n            const textarea = this.addPostForm.querySelector('textarea');\r\n            //Ensure we have the latest version of the text from TinyMCE instance\r\n            if (textarea && !empty(textarea.id)) {\r\n                saveTinyMCE(textarea.id, true);\r\n            }\r\n            //Get submit button\r\n            const button = this.addPostForm.querySelector('input[type=submit]');\r\n            //Get form data\r\n            const formData = new FormData(this.addPostForm);\r\n            //Add time zone\r\n            formData.append('postForm[timezone]', timezone);\r\n            buttonToggle(button as HTMLInputElement);\r\n            ajax(`${location.protocol}//${location.host}/api/talks/posts`, formData, 'json', 'POST', ajaxTimeout, true)\r\n                .then((response) => {\r\n                    const data = response as ajaxJSONResponse;\r\n                    if (data.data === true) {\r\n                        if (this.addPostForm) {\r\n                            //Notify TinyMCE, that data was saved\r\n                            if (textarea && !empty(textarea.id)) {\r\n                                saveTinyMCE(textarea.id);\r\n                            }\r\n                        }\r\n                        addSnackbar('Post created. Reloading...', 'success');\r\n                        window.location.href = data.location;\r\n                    } else {\r\n                        if (data.location) {\r\n                            addSnackbar(data.reason + ` View the post <a href=\"${data.location}\" target=\"_blank\">here</a>.`, 'failure', 0);\r\n                        } else {\r\n                            addSnackbar(data.reason, 'failure', snackbarFailLife);\r\n                        }\r\n                    }\r\n                    buttonToggle(button as HTMLInputElement);\r\n                });\r\n        }\r\n    }\r\n    \r\n    private deleteThread(): void\r\n    {\r\n        if (this.deleteThreadButton) {\r\n            if (confirm('This is the last chance to back out.\\nIf you press \\'OK\\' this thread will be permanently deleted.\\nPress \\'Cancel\\' to cancel the action.')) {\r\n                const id = this.deleteThreadButton.getAttribute('data-thread') ?? '';\r\n                if (!empty(id)) {\r\n                    buttonToggle(this.deleteThreadButton);\r\n                    ajax(`${location.protocol}//${location.host}/api/talks/threads/${id}/delete`, null, 'json', 'DELETE', ajaxTimeout, true)\r\n                        .then((response) => {\r\n                            const data = response as ajaxJSONResponse;\r\n                            if (data.data === true) {\r\n                                addSnackbar('Thread removed. Redirecting to parent...', 'success');\r\n                                window.location.href = data.location;\r\n                            } else {\r\n                                addSnackbar(data.reason, 'failure', snackbarFailLife);\r\n                            }\r\n                            if (this.deleteThreadButton) {\r\n                                buttonToggle(this.deleteThreadButton);\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    private closeThread(): void\r\n    {\r\n        if (this.closeThreadButton) {\r\n            const id = this.closeThreadButton.getAttribute('data-thread') ?? '';\r\n            const verb = this.closeThreadButton.value.toLowerCase();\r\n            if (!empty(id)) {\r\n                buttonToggle(this.closeThreadButton);\r\n                ajax(`${location.protocol}//${location.host}/api/talks/threads/${id}/${verb}`, null, 'json', 'PATCH', ajaxTimeout, true)\r\n                    .then((response) => {\r\n                        const data = response as ajaxJSONResponse;\r\n                        if (data.data === true) {\r\n                            if (verb === 'close') {\r\n                                addSnackbar('Thread closed. Refreshing...', 'success');\r\n                            } else {\r\n                                addSnackbar('Thread reopened. Refreshing...', 'success');\r\n                            }\r\n                            pageRefresh();\r\n                        } else {\r\n                            addSnackbar(data.reason, 'failure', snackbarFailLife);\r\n                        }\r\n                        if (this.closeThreadButton) {\r\n                            buttonToggle(this.closeThreadButton);\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n    \r\n    private editThread(): void\r\n    {\r\n        if (this.editThreadForm) {\r\n            //Get submit button\r\n            const button = this.editThreadForm.querySelector('input[type=submit]');\r\n            //Get form data\r\n            const formData = new FormData(this.editThreadForm);\r\n            //Check if custom icon is being attached\r\n            const og_image: HTMLInputElement | null = this.editThreadForm.querySelector('input[type=file]');\r\n            if (og_image?.files?.[0]) {\r\n                formData.append('curThread[og_image]', 'true');\r\n            } else {\r\n                formData.append('curThread[og_image]', 'false');\r\n            }\r\n            buttonToggle(button as HTMLInputElement);\r\n            ajax(`${location.protocol}//${location.host}/api/talks/threads/${String(formData.get('curThread[thread_id]') ?? '0')}/edit`, formData, 'json', 'POST', ajaxTimeout, true)\r\n                .then((response) => {\r\n                    const data = response as ajaxJSONResponse;\r\n                    if (data.data === true) {\r\n                        addSnackbar('Thread updated. Reloading...', 'success');\r\n                        pageRefresh();\r\n                    } else {\r\n                        if (data.location) {\r\n                            addSnackbar(data.reason + ` View the section <a href=\"${data.location}\" target=\"_blank\">here</a>.`, 'failure', 0);\r\n                        } else {\r\n                            addSnackbar(data.reason, 'failure', snackbarFailLife);\r\n                        }\r\n                        buttonToggle(button as HTMLInputElement);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n}\r\n"]}