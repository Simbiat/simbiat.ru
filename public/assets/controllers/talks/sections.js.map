{"version":3,"file":"sections.js","sourceRoot":"/js/Pages/","sources":["talks/sections.ts"],"names":[],"mappings":"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","sourcesContent":["export class Sections\r\n{\r\n    private readonly addSectionForm: HTMLFormElement | null = null;\r\n    private readonly addThreadForm: HTMLFormElement | null = null;\r\n    private readonly editSectionForm: HTMLFormElement | null = null;\r\n    private readonly sectionsList: HTMLTableElement | null = null;\r\n    private readonly deleteSectionButton: HTMLInputElement | null = null;\r\n    \r\n    public constructor()\r\n    {\r\n        this.sectionsList = document.querySelector('#sections_list');\r\n        this.addSectionForm = document.querySelector('#addSectionForm');\r\n        this.addThreadForm = document.querySelector('#addThreadForm');\r\n        this.editSectionForm = document.querySelector('#editSectionForm');\r\n        this.deleteSectionButton = document.querySelector('#delete_section');\r\n        if (this.addSectionForm) {\r\n            submitIntercept(this.addSectionForm, this.addSection.bind(this));\r\n        }\r\n        if (this.addThreadForm) {\r\n            submitIntercept(this.addThreadForm, this.addThread.bind(this));\r\n        }\r\n        if (this.editSectionForm) {\r\n            submitIntercept(this.editSectionForm, this.editSection.bind(this));\r\n        }\r\n        if (this.deleteSectionButton) {\r\n            this.deleteSectionButton.addEventListener('click', () => {\r\n                this.deleteSection();\r\n            });\r\n        }\r\n        if (this.sectionsList) {\r\n            //Listener for marking sections private/public\r\n            document.querySelectorAll('.section_private[id^=section_private_checkbox_]')\r\n                    .forEach((item) => {\r\n                        //Tracking click to be able to roll back change easily\r\n                        (item as HTMLElement).addEventListener('click', (event: MouseEvent) => {\r\n                            Sections.makeSectionPrivate(event);\r\n                        });\r\n                    });\r\n            //Listener for opening/closing sections\r\n            document.querySelectorAll('.section_closed[id^=section_closed_checkbox_]')\r\n                    .forEach((item) => {\r\n                        //Tracking click to be able to roll back change easily\r\n                        (item as HTMLElement).addEventListener('click', (event: MouseEvent) => {\r\n                            Sections.closeSection(event);\r\n                        });\r\n                    });\r\n            //Listener for ordering sections\r\n            document.querySelectorAll('.section_sequence[id^=section_sequence_]')\r\n                    .forEach((item) => {\r\n                        //Tracking click to be able to roll back change easily\r\n                        item.addEventListener('change', (event: Event) => {\r\n                            this.orderSection(event);\r\n                        });\r\n                    });\r\n        }\r\n        //Listeners if there are threads\r\n        if (document.querySelector('#threads_list')) {\r\n            //Listener for marking threads private/public\r\n            document.querySelectorAll('.thread_private[id^=thread_private_checkbox_]')\r\n                    .forEach((item) => {\r\n                        //Tracking click to be able to roll back change easily\r\n                        (item as HTMLElement).addEventListener('click', (event: MouseEvent) => {\r\n                            Sections.makeThreadPrivate(event);\r\n                        });\r\n                    });\r\n            //Listener for (un)pinning threads\r\n            document.querySelectorAll('.thread_pin[id^=thread_pin_checkbox_]')\r\n                    .forEach((item) => {\r\n                        //Tracking click to be able to roll back change easily\r\n                        (item as HTMLElement).addEventListener('click', (event: MouseEvent) => {\r\n                            Sections.pinThread(event);\r\n                        });\r\n                    });\r\n        }\r\n    }\r\n    \r\n    private static makeSectionPrivate(event: Event): void\r\n    {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const checkbox = event.target as HTMLInputElement;\r\n        //Get verb\r\n        let verb;\r\n        if (checkbox.checked) {\r\n            verb = 'private';\r\n        } else {\r\n            verb = 'public';\r\n        }\r\n        buttonToggle(checkbox);\r\n        const sectionId = checkbox.getAttribute('data-section') ?? '';\r\n        ajax(`${location.protocol}//${location.host}/api/talks/sections/${sectionId}/mark${verb}`, null, 'json', 'PATCH', ajaxTimeout, true)\r\n            .then((response) => {\r\n                const data = response as ajaxJSONResponse;\r\n                if (data.data === true) {\r\n                    if (checkbox.checked) {\r\n                        checkbox.checked = false;\r\n                        addSnackbar('Section marked as public', 'success');\r\n                    } else {\r\n                        checkbox.checked = true;\r\n                        addSnackbar('Section marked as private', 'success');\r\n                    }\r\n                } else {\r\n                    addSnackbar(data.reason, 'failure', snackbarFailLife);\r\n                }\r\n                buttonToggle(checkbox);\r\n            });\r\n    }\r\n    \r\n    private static closeSection(event: Event): void\r\n    {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const checkbox = event.target as HTMLInputElement;\r\n        //Get verb\r\n        let verb;\r\n        if (checkbox.checked) {\r\n            verb = 'close';\r\n        } else {\r\n            verb = 'open';\r\n        }\r\n        buttonToggle(checkbox);\r\n        const sectionId = checkbox.getAttribute('data-section') ?? '';\r\n        ajax(`${location.protocol}//${location.host}/api/talks/sections/${sectionId}/${verb}`, null, 'json', 'PATCH', ajaxTimeout, true)\r\n            .then((response) => {\r\n                const data = response as ajaxJSONResponse;\r\n                if (data.data === true) {\r\n                    if (checkbox.checked) {\r\n                        checkbox.checked = false;\r\n                        addSnackbar('Section opened', 'success');\r\n                    } else {\r\n                        checkbox.checked = true;\r\n                        addSnackbar('Section closed', 'success');\r\n                    }\r\n                } else {\r\n                    addSnackbar(data.reason, 'failure', snackbarFailLife);\r\n                }\r\n                buttonToggle(checkbox);\r\n            });\r\n    }\r\n    \r\n    private orderSection(event: Event): void\r\n    {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const orderInput = event.target as HTMLInputElement;\r\n        const initialValue = orderInput.getAttribute('data-initial') ?? '0';\r\n        const newValue = empty(orderInput.value) ? '0' : orderInput.value;\r\n        //Do anything only if new value is different from the initial value. Not sure if change event can happen without change in the value, but better be safe and reduce potential calls\r\n        if (initialValue !== newValue) {\r\n            buttonToggle(orderInput);\r\n            //Generate form data\r\n            const sectionId = orderInput.getAttribute('data-section') ?? '';\r\n            const formData = new FormData();\r\n            formData.append('order', newValue);\r\n            ajax(`${location.protocol}//${location.host}/api/talks/sections/${sectionId}/order`, formData, 'json', 'PATCH', ajaxTimeout, true)\r\n                .then((response) => {\r\n                    const data = response as ajaxJSONResponse;\r\n                    if (data.data === true) {\r\n                        orderInput.setAttribute('data-initial', newValue);\r\n                        this.sort();\r\n                        addSnackbar('Order updated', 'success');\r\n                    } else {\r\n                        orderInput.value = initialValue;\r\n                        addSnackbar(data.reason, 'failure', snackbarFailLife);\r\n                    }\r\n                    buttonToggle(orderInput);\r\n                });\r\n        }\r\n    }\r\n    \r\n    private sort(): void\r\n    {\r\n        if (this.sectionsList) {\r\n            const tbody = this.sectionsList.querySelector('tbody');\r\n            if (tbody) {\r\n                const newBody = tbody.cloneNode();\r\n                let rows = Array.prototype.slice.call(tbody.rows, 0);\r\n                rows = rows.sort((a: HTMLTableRowElement, b: HTMLTableRowElement): number => {\r\n                    //Get sequences and text content elements\r\n                    const aSequence = a.querySelector('.section_sequence');\r\n                    const bSequence = b.querySelector('.section_sequence');\r\n                    const aText = a.querySelector('.section_name a');\r\n                    const bText = b.querySelector('.section_name a');\r\n                    let order = 0;\r\n                    //Get the value of order inputs comparison. Important, that we compare \"b\" against \"a\" for descending order\r\n                    if (aSequence && bSequence) {\r\n                        //I do not see a way of \"skip\" an argument in function call without using `undefined`, so suppressing the check for the line\r\n                        // eslint-disable-next-line no-undefined\r\n                        order = (bSequence as HTMLInputElement).value.localeCompare((aSequence as HTMLInputElement).value, undefined, {'numeric': true});\r\n                    }\r\n                    //If it's 0, means that order is the same, thus we need to check the names\r\n                    if (order === 0) {\r\n                        //Here we are compare \"a\" against \"b\" for ascending order\r\n                        if (aText && bText) {\r\n                            return String(aText.textContent)\r\n                                .localeCompare(String(bText.textContent));\r\n                        }\r\n                    }\r\n                    return order;\r\n                });\r\n                for (const row of rows) {\r\n                    newBody.appendChild(row);\r\n                }\r\n                (tbody.parentNode as HTMLTableElement).replaceChild(newBody, tbody);\r\n            }\r\n        }\r\n    }\r\n    \r\n    private addSection(): void\r\n    {\r\n        if (this.addSectionForm) {\r\n            //Get submit button\r\n            const button = this.addSectionForm.querySelector('input[type=submit]');\r\n            //Get form data\r\n            const formData = new FormData(this.addSectionForm);\r\n            //Check if custom icon is being attached\r\n            const icon: HTMLInputElement | null = this.addSectionForm.querySelector('input[type=file]');\r\n            if (icon?.files?.[0]) {\r\n                formData.append('newSection[icon]', 'true');\r\n            } else {\r\n                formData.append('newSection[icon]', 'false');\r\n            }\r\n            //Add timezone\r\n            formData.append('newSection[timezone]', timezone);\r\n            buttonToggle(button as HTMLInputElement);\r\n            ajax(`${location.protocol}//${location.host}/api/talks/sections`, formData, 'json', 'POST', ajaxTimeout, true)\r\n                .then((response) => {\r\n                    const data = response as ajaxJSONResponse;\r\n                    if (data.data === true) {\r\n                        addSnackbar('Section created. Reloading...', 'success');\r\n                        pageRefresh();\r\n                    } else {\r\n                        if (data.location) {\r\n                            addSnackbar(data.reason + ` View the section <a href=\"${data.location}\" target=\"_blank\">here</a>.`, 'failure', 0);\r\n                        } else {\r\n                            addSnackbar(data.reason, 'failure', snackbarFailLife);\r\n                        }\r\n                    }\r\n                    buttonToggle(button as HTMLInputElement);\r\n                });\r\n        }\r\n    }\r\n    \r\n    private editSection(): void\r\n    {\r\n        if (this.editSectionForm) {\r\n            //Get submit button\r\n            const button = this.editSectionForm.querySelector('input[type=submit]');\r\n            //Get form data\r\n            const formData = new FormData(this.editSectionForm);\r\n            //Check if custom icon is being attached\r\n            const icon: HTMLInputElement | null = this.editSectionForm.querySelector('input[type=file]');\r\n            if (icon?.files?.[0]) {\r\n                formData.append('curSection[icon]', 'true');\r\n            } else {\r\n                formData.append('curSection[icon]', 'false');\r\n            }\r\n            buttonToggle(button as HTMLInputElement);\r\n            ajax(`${location.protocol}//${location.host}/api/talks/sections/${String(formData.get('curSection[sectionid]') ?? '0')}/edit`, formData, 'json', 'POST', ajaxTimeout, true)\r\n                .then((response) => {\r\n                    const data = response as ajaxJSONResponse;\r\n                    if (data.data === true) {\r\n                        addSnackbar('Section updated. Reloading...', 'success');\r\n                        pageRefresh();\r\n                    } else {\r\n                        if (data.location) {\r\n                            addSnackbar(data.reason + ` View the section <a href=\"${data.location}\" target=\"_blank\">here</a>.`, 'failure', 0);\r\n                        } else {\r\n                            addSnackbar(data.reason, 'failure', snackbarFailLife);\r\n                        }\r\n                        buttonToggle(button as HTMLInputElement);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n    \r\n    private deleteSection(): void\r\n    {\r\n        if (this.deleteSectionButton) {\r\n            if (confirm('This is the last chance to back out.\\nIf you press \\'OK\\' this section will be permanently deleted.\\nPress \\'Cancel\\' to cancel the action.')) {\r\n                const id = this.deleteSectionButton.getAttribute('data-section') ?? '';\r\n                if (!empty(id)) {\r\n                    buttonToggle(this.deleteSectionButton);\r\n                    ajax(`${location.protocol}//${location.host}/api/talks/sections/${id}/delete`, null, 'json', 'DELETE', ajaxTimeout, true)\r\n                        .then((response) => {\r\n                            const data = response as ajaxJSONResponse;\r\n                            if (data.data === true) {\r\n                                addSnackbar('Section removed. Redirecting to parent...', 'success');\r\n                                window.location.href = data.location;\r\n                            } else {\r\n                                addSnackbar(data.reason, 'failure', snackbarFailLife);\r\n                            }\r\n                            if (this.deleteSectionButton) {\r\n                                buttonToggle(this.deleteSectionButton);\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    private addThread(): void\r\n    {\r\n        if (this.addThreadForm) {\r\n            //Get submit button\r\n            const button = this.addThreadForm.querySelector('input[type=submit]');\r\n            //Get form data\r\n            const formData = new FormData(this.addThreadForm);\r\n            //Check if custom icon is being attached\r\n            const ogimage: HTMLInputElement | null = this.addThreadForm.querySelector('input[type=file]');\r\n            if (ogimage?.files?.[0]) {\r\n                formData.append('newThread[ogimage]', 'true');\r\n            } else {\r\n                formData.append('newThread[ogimage]', 'false');\r\n            }\r\n            //Add timezone\r\n            formData.append('newThread[timezone]', timezone);\r\n            buttonToggle(button as HTMLInputElement);\r\n            ajax(`${location.protocol}//${location.host}/api/talks/threads`, formData, 'json', 'POST', ajaxTimeout, true)\r\n                .then((response) => {\r\n                    const data = response as ajaxJSONResponse;\r\n                    if (data.data === true) {\r\n                        if (this.addThreadForm) {\r\n                            //Notify TinyMCE, that data was saved\r\n                            const textarea = this.addThreadForm.querySelector('textarea');\r\n                            if (textarea && !empty(textarea.id)) {\r\n                                saveTinyMCE(textarea.id);\r\n                            }\r\n                        }\r\n                        addSnackbar('Thread created. Reloading...', 'success');\r\n                        window.location.href = data.location;\r\n                    } else {\r\n                        if (data.location) {\r\n                            addSnackbar(data.reason + ` View the thread <a href=\"${data.location}\" target=\"_blank\">here</a>.`, 'failure', 0);\r\n                        } else {\r\n                            addSnackbar(data.reason, 'failure', snackbarFailLife);\r\n                        }\r\n                    }\r\n                    buttonToggle(button as HTMLInputElement);\r\n                });\r\n        }\r\n    }\r\n    \r\n    private static makeThreadPrivate(event: Event): void\r\n    {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const checkbox = event.target as HTMLInputElement;\r\n        //Get verb\r\n        let verb;\r\n        if (checkbox.checked) {\r\n            verb = 'private';\r\n        } else {\r\n            verb = 'public';\r\n        }\r\n        buttonToggle(checkbox);\r\n        const threadId = checkbox.getAttribute('data-thread') ?? '';\r\n        ajax(`${location.protocol}//${location.host}/api/talks/threads/${threadId}/mark${verb}`, null, 'json', 'PATCH', ajaxTimeout, true)\r\n            .then((response) => {\r\n                const data = response as ajaxJSONResponse;\r\n                if (data.data === true) {\r\n                    if (checkbox.checked) {\r\n                        checkbox.checked = false;\r\n                        addSnackbar('Thread marked as public', 'success');\r\n                    } else {\r\n                        checkbox.checked = true;\r\n                        addSnackbar('Thread marked as private', 'success');\r\n                    }\r\n                } else {\r\n                    addSnackbar(data.reason, 'failure', snackbarFailLife);\r\n                }\r\n                buttonToggle(checkbox);\r\n            });\r\n    }\r\n    \r\n    private static pinThread(event: Event): void\r\n    {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const checkbox = event.target as HTMLInputElement;\r\n        //Get verb\r\n        let verb;\r\n        if (checkbox.checked) {\r\n            verb = 'pin';\r\n        } else {\r\n            verb = 'unpin';\r\n        }\r\n        buttonToggle(checkbox);\r\n        const threadId = checkbox.getAttribute('data-thread') ?? '';\r\n        ajax(`${location.protocol}//${location.host}/api/talks/threads/${threadId}/${verb}`, null, 'json', 'PATCH', ajaxTimeout, true)\r\n            .then((response) => {\r\n                const data = response as ajaxJSONResponse;\r\n                if (data.data === true) {\r\n                    if (checkbox.checked) {\r\n                        checkbox.checked = false;\r\n                        addSnackbar('Thread unpinned', 'success');\r\n                    } else {\r\n                        checkbox.checked = true;\r\n                        addSnackbar('Thread pinned', 'success');\r\n                    }\r\n                } else {\r\n                    addSnackbar(data.reason, 'failure', snackbarFailLife);\r\n                }\r\n                buttonToggle(checkbox);\r\n            });\r\n    }\r\n}\r\n"]}