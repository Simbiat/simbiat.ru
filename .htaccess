#Handle PHP errors
php_flag log_errors on
php_value error_log ./error.log

#Adjust view options
Options -Indexes -MultiViews
DirectoryIndex index.php

ErrorDocument 400 /httperror/404/
ErrorDocument 403 /httperror/403/
ErrorDocument 404 /httperror/404/
#Teapot is not supported by deafult
#ErrorDocument 418 /httperror/418/
ErrorDocument 500 /httperror/500/
ErrorDocument 503 /httperror/503/

#Prevent some of the headers being sent
<IfModule mod_headers.c>
	Header always unset Expires
	Header always unset Host
	Header always unset P3P
	Header always unset Pragma
	Header always unset Public-Key-Pins
	Header always unset Public-Key-Pins-Report-Only
	Header always unset Via
	Header always unset X-Cache
	Header always unset X-AspNet-Version
	Header always unset X-AspNetMvc-version
	Header always unset X-Frame-Options
	Header always unset X-Powered-By
	Header always unset X-Runtime
	Header always unset X-Version
	Header always unset X-UA-Compatible
	Header always unset X-Robots-Tag
	Header always unset Server

    #'onsuccess' is default condition (can be omitted) and it's not superseeded by 'always' in some cases, thus duplicating the headers
	Header onsuccess unset Expires
    Header onsuccess unset Host
    Header onsuccess unset P3P
    Header onsuccess unset Pragma
    Header onsuccess unset Public-Key-Pins
    Header onsuccess unset Public-Key-Pins-Report-Only
    Header onsuccess unset Via
    Header onsuccess unset X-Cache
    Header onsuccess unset X-AspNet-Version
    Header onsuccess unset X-AspNetMvc-version
    Header onsuccess unset X-Frame-Options
    Header onsuccess unset X-Powered-By
    Header onsuccess unset X-Runtime
    Header onsuccess unset X-Version
    Header onsuccess unset X-UA-Compatible
    Header onsuccess unset X-Robots-Tag
    Header onsuccess unset Server
</IfModule>

#Disable native ETag, since we use our own
FileETag None

#Disable server signature footer in some server responces
ServerSignature Off

#Allow no SSL authentication
#SSLVerifyClient optional
SSLVerifyDepth 3
#RewriteEngine On
#RewriteCond %{SSL:SSL_CLIENT_VERIFY} !^SUCCESS$
#Needs to be changed if we will be using SSL authentication
#RewriteRule .* /help/ssl-client-auth-required.html [L]

#Prevent script abort when window is closed, if using Litespeed
<IfModule Litespeed>
    RewriteEngine On
    RewriteRule .* - [E=noabort:1, E=noconntimeout:1]
</IfModule>

#Rewrite rules
<IfModule mod_rewrite.c>
    #Enable it globally
    RewriteEngine On

    #Block access to all hidden (starting with a dot) files and directories except for the .well-known
    RewriteCond %{REQUEST_URI} "!(^|/)\.well-known/([^./]+./?)+$" [NC]
    RewriteCond %{SCRIPT_FILENAME} -d [OR]
    RewriteCond %{SCRIPT_FILENAME} -f
    RewriteRule "(^|/)\." - [F]

    #Deny POST using HTTP10 and below
    RewriteCond %{THE_REQUEST} ^POST(.*)HTTP/(0\.9|1\.0)$ [NC]
    RewriteRule .* - [F,L]

    #Deny all requests, that are not POST, GET, HEAD
    RewriteCond %{REQUEST_METHOD} !^(post|get|head) [NC]
    RewriteRule .* - [F,L]

    # Prevent Apache from responding to `TRACE` HTTP request.
    # The TRACE method, while seemingly harmless, can be successfully leveraged
    # in some scenarios to steal legitimate users' credentials.
    RewriteCond %{REQUEST_METHOD} ^TRACE [NC]
    RewriteRule .* - [R=405,L]

    #Redirect everything to index.php
    #If not the updater
    RewriteCond %{REQUEST_FILENAME} !.*EngineUpdate\.php [NC]
    #Or not PHPMyAdmin
    RewriteCond %{REQUEST_FILENAME} !.*dbhelper.* [NC]
    RewriteRule ^ index.php [QSA,L]
</IfModule>

# php -- BEGIN cPanel-generated handler, do not edit
# This domain inherits the “PHP” package.
# php -- END cPanel-generated handler, do not edit
