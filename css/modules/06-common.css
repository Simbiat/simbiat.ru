.failure, .error {
    color: var(--color-failure);
    font-weight: bold;
}
.warning, .notice, .attention {
     color: var(--color-warning);
}
.success {
    color: var(--color-success);
}
.disabled, *[disabled], *[aria-disabled] {
     color: var(--color-disabled);
 }
.linkIcon {
    width: 1.25rem;
    height: 1.25rem;
    /*Negative margin to align with text*/
    margin: 0 0.25rem 0.25rem 0.25rem;
}
/*We do not need the negative margin in footer*/
footer address a .linkIcon {
    margin-top: 0.25rem;
}
.shown {
    display: block!important;
}
.aboutSection {
    text-align: center;
    font-size: small;
}
#http_error{
    text-align: center;
}
#http_error img {
    max-width: 20rem;
    max-height: 20rem;
}
.zeroMargin {
    margin: 0
}
.bottomMargin {
    margin-bottom: 2rem;
}
.float_left {
    float: left;
}
.float_right {
    float: right;
}
.clear::after {
    content: ' ';
    display: block;
    height: 0;
    clear: both;
}
.avatar {
    width: 4rem;
    height: 4rem;
    border-radius: var(--border-radius);
    border-style: solid;
    border-color: var(--border-color-outset);
}
.tagList {
    display: flex;
    flex-direction: row;
    font-style: italic;
    flex-wrap: wrap;
    align-content: space-between;
    justify-content: flex-start;
    align-items: center;
    padding: 0;
    list-style: none;
}
.tagList li {
    margin: 0.1rem 0.1rem 0.1rem 0.5rem;
    background-color: var(--color-block);
    padding: 0.1rem 0.25rem 0.1rem 0.1rem;
    border-radius: var(--border-radius);
}
.tagList li::before {
    content: '#';
    color: var(--border-light);
}
.fadeIn {
    animation: fadein 0.5s;
}
.fadeOut {
    animation: fadeout 0.5s;
}
.copyQuote {
    width: 1.5em;
    height: 1.5em;
    padding: 0.25em;
    border-radius: 25%;
    border-style: solid;
    border-color: transparent;
    border-width: var(--border-width);
    float: right;
    cursor: pointer;
    margin-right: 0.25em;
}
.copyQuote:hover,
.copyQuote:focus,
.copyQuote:active {
    border-color: var(--color-interactive);
}
.copyQuote:active {
    border-color: var(--color-interactive);
    filter: brightness(70%);
}

/*Color unicode emojis with plain color. This allows a bit more standardization across systems*/
[class^='emoji'], [class*=' emoji']  {
    color: transparent;
}
.emojiGreen {
    text-shadow: 0 0 0 var(--color-success);
}
.emojiRed {
    text-shadow: 0 0 0 var(--color-failure);
}
.emojiOrange {
    text-shadow: 0 0 0 var(--color-warning);
}
.emojiBlue {
    text-shadow: 0 0 0 var(--color-interactive);
}
.emojiWhite {
    text-shadow: 0 0 0 var(--color-text);
}

/*Style search results along with entity cards*/
.searchResults {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-content: center;
    justify-content: space-evenly;
    align-items: center;
}
.searchCount {
    text-align: center;
    margin-bottom: 0.5rem;
}
.entityCard {
    width: clamp(30%,50%,13rem);
    height: 2rem;
    background-color: var(--color-block);
    margin: 0.2rem;
    border-color: var(--border-color-outset);
    padding: 0;
    display: inline-flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-content: center;
    justify-content: space-evenly;
    align-items: center;
}
.entityIcon, .entityArrow {
    width: 2rem;
    height: 2rem;
    line-height: 2rem;
    vertical-align: middle;
    display: block;
    float: left;
}
.entityIcon {
    text-align: center;
}
.entityArrow {
    font-size: 1.5rem;
    text-align: right;
    width: 1.2rem;
}
.entityIcon>img {
    border-top-left-radius: calc(var(--border-radius) - var(--border-width));
    border-bottom-left-radius: calc(var(--border-radius) - var(--border-width));
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: left top;
    overflow: hidden;
    vertical-align: top;
}
.entityName {
    width: calc(100% - 3.5rem);
    overflow: hidden;
    text-overflow: clip;
    word-break: break-word;
    display: block;
    height: 2rem;
    font-size: smaller;
    line-height: 1.025rem;
    float: left;
    color: var(--color-text);
    border-left: 0.1rem solid var(--border-light);
    border-right: 0.1rem solid var(--border-dark);
    padding-left: 0.1rem;
    font-weight: normal;
}
.entityRank {
    overflow: hidden;
    text-overflow: clip;
    display: block;
    height: 1.5rem;
    font-size: smaller;
    line-height: 1.025rem;
    float: left;
    padding-left: 0.1rem;
}

.searchForm {
    text-align: center;
}
#searchLabel,
#searchField {
    width: 100%;
}

.relative {
    position: relative;
}

.spin {
    animation: spin 4s linear infinite;
}
.refresh.spin,
.refresh.spin:hover,
.refresh.focus,
.refresh.active {
    border: none;
    filter: none;
    cursor: wait;
}

.bold {
    font-weight: bold;
}

.gold {
    color: gold;
}

.spinner {
    width: 3rem;
    height: 3rem;
    display: block;
    margin: auto;
}

.nodecor {
    text-decoration: none!important;
}

.inline {
    display: inline;
}

.middle {
    text-align: center;
    vertical-align: middle;
}

.block {
    display: block;
}
.w100pc {
    width: 100%;
}
